document.addEventListener('DOMContentLoaded', () => {
    // This is the path to the JSON file generated by your Python script.
    // Ensure 'bookshelf.json' is in the same directory as your index.html and script.js
    const JSON_DATA_FILE = './bookshelf.json';

    async function loadBookshelf() {
        const currentlyReadingContainer = document.getElementById('current-books');
        const yearlyBooksContainer = document.getElementById('yearly-books');

        // Display loading messages while data is fetched
        currentlyReadingContainer.innerHTML = '<p>Loading currently reading books...</p>';
        yearlyBooksContainer.innerHTML = '<p>Loading read books...</p>';

        try {
            // Fetch the local JSON file
            const response = await fetch(JSON_DATA_FILE);

            // Check if the fetch was successful
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status} when fetching ${JSON_DATA_FILE}`);
            }

            // Parse the JSON response
            const allBooks = await response.json();

            // Pass the data to your display functions
            displayCurrentlyReading(allBooks.currentlyReading);
            displayReadBooks(allBooks.readBooksByYear);

        } catch (error) {
            console.error('Error loading bookshelf data:', error);
            currentlyReadingContainer.innerHTML = '<p>Error loading books. Please try again later.</p>';
            yearlyBooksContainer.innerHTML = '<p>Error loading books. Please try again later.</p>';
        }
    }

    // --- These display functions remain the same as they process the structured JSON data ---

    function displayCurrentlyReading(books) {
        const container = document.getElementById('current-books');
        container.innerHTML = ''; // Clear loading message

        if (books.length === 0) {
            container.innerHTML = '<p>No books currently being read.</p>';
            return;
        }

        books.forEach(book => {
            const bookDiv = document.createElement('div');
            bookDiv.classList.add('book-item');
            bookDiv.innerHTML = `
                <a href="${book.link}" target="_blank">
                    <img src="${book.imageUrl}" alt="${book.title}" width="75">
                </a>
                <div class="book-details">
                    <h3><a href="${book.link}" target="_blank">${book.title}</a></h3>
                    <p>by ${book.author}</p>
                </div>
            `;
            container.appendChild(bookDiv);
        });
    }

    function displayReadBooks(booksByYear) {
        const container = document.getElementById('yearly-books');
        container.innerHTML = ''; // Clear loading message

        // Sort years in descending order (e.g., 2025, 2024, etc.)
        const sortedYears = Object.keys(booksByYear).sort((a, b) => b - a);

        if (sortedYears.length === 0) {
            container.innerHTML = '<p>No read books to display.</p>';
            return;
        }

        sortedYears.slice(0, 2).forEach(year => { // .slice(0, 2) trae solo este a√±o y el pasado
            const yearSection = document.createElement('div');
            yearSection.classList.add('year-section');
            yearSection.innerHTML = `<h3>${year}</h3>`;

            const booksList = document.createElement('div');
            // Ensure books within a year are also sorted (e.g., by read date)
            const booksInYear = booksByYear[year];
            booksInYear.sort((a, b) => {
                const dateA = a.readAt ? new Date(a.readAt) : new Date(0); // Use epoch for null dates to push them to the end
                const dateB = b.readAt ? new Date(b.readAt) : new Date(0);
                return dateB - dateA; // Descending by date
            });

            booksInYear.forEach(book => {
                const bookDiv = document.createElement('div');
                bookDiv.classList.add('book-item');
                bookDiv.innerHTML = `
                    <a href="${book.link}" target="_blank">
                        <img src="${book.imageUrl}" alt="${book.title}" width="75">
                    </a>
                    <div class="book-details">
                        <h3><a href="${book.link}" target="_blank">${book.title}</a></h3>
                        <p>by ${book.author}</p>
                    </div>
                `;
                booksList.appendChild(bookDiv);
            });
            yearSection.appendChild(booksList);
            container.appendChild(yearSection);
        });
    }

    // Initialize the bookshelf display when the page loads
    loadBookshelf();
});
